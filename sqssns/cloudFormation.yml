Resources:
  MyDeadLetterQueue: 
    Type: AWS::SQS::Queue
  MySQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: "hhz-queue"
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt MyDeadLetterQueue.Arn
        maxReceiveCount: 5
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: hzhuang-topic
      TopicName: hzhuang-topic
      Subscription:
        - Endpoint: hzhuang@thoughtworks.com
          Protocol: email
        - Endpoint: !GetAtt MySQS.Arn
          Protocol: sqs
  TriggerSNSEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: The rule use to trigger sns
      ScheduleExpression: rate(1 minute)
      Targets:
        - Arn: !Ref SNSTopic
          Id: trigger-sns
  QueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues: 
        - !Ref MySQS
      PolicyDocument:
        Statement:
          -
            Action:
              - "SQS:SendMessage" 
              - "SQS:ReceiveMessage"
            Effect: Allow
            Principal: "*"
            Sid: allow-sns-messages
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref SNSTopic


Outputs: 
  MyQueueURL: 
    Description: "URL of source queue"
    Value: 
      Ref: "MySQS"
  MyQueueARN: 
    Description: "ARN of source queue"
    Value: 
      Fn::GetAtt:
        - "MySQS"
        - "Arn"
  DeadLetterQueueURL: 
    Description: "URL of dead-letter queue"
    Value: 
      Ref: "MyDeadLetterQueue"
  DeadLetterQueueARN: 
    Description: "ARN of dead-letter queue"
    Value: 
      Fn::GetAtt: 
        - "MyDeadLetterQueue"
        - "Arn"
  TopicRef:
    Description: "Ref of SNSTopic"
    Value: !Ref SNSTopic